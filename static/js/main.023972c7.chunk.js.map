{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/icons/SearchIcon.js","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","a","id","name","email","CardList","monster","map","Search","viewBox","width","height","d","xlinkHref","fill","fillOpacity","stroke","strokeWidth","handleChange","placeholder","SearchIcon","type","onChange","App","useState","setMonster","search","setSearch","useEffect","axios","res","data","fetchData","filteredMonsters","filter","b","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAaeA,G,YAXF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,EAAEC,GAAlC,4BACtB,mCAAML,EAAMI,EAAEE,KAAd,OACA,4BAAIN,EAAMI,EAAEG,aCKTC,EATE,SAACR,GACd,OACI,qBAAKC,UAAU,WAAf,SACKD,EAAMS,QAAQC,KAAI,SAAAN,GAAC,OAChB,cAAC,EAAD,CAAiBA,EAAGA,GAATA,EAAEC,U,eC6BdM,MAlCf,SAAgBX,GACd,OACE,8CACEY,QAAQ,cACRC,MAAO,GACPC,OAAQ,IACJd,GAJN,cAME,iCACE,sBACEe,EAAE,2IACFV,GAAG,cAEL,sBAAMU,EAAE,4BAA4BV,GAAG,iBAEzC,qBAAKW,UAAU,aAAaC,KAAK,UAAUC,YAAa,IACxD,qBACEF,UAAU,aACVE,YAAa,EACbC,OAAO,UACPC,YAAa,KAEf,4BACE,qBACEJ,UAAU,aACVE,YAAa,EACbC,OAAO,UACPC,YAAa,YCTRT,EAjBA,SAAC,GAAmC,IAAjCU,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC5B,OACI,qBAAKrB,UAAU,UAAf,SACI,sBAAKA,UAAW,cAAhB,UACI,cAACsB,EAAD,CAAYtB,UAAU,SACtB,uBACIA,UAAU,SACVuB,KAAK,SACLC,SAAUJ,EACVC,YAAaA,UC2BlBI,MAjCf,SAAa1B,GAAQ,IAAD,EACY2B,mBAAS,IADrB,mBACXlB,EADW,KACFmB,EADE,OAEUD,mBAAS,IAFnB,mBAEXE,EAFW,KAEHC,EAFG,KAIlBC,qBAAU,YACO,uCAAG,4BAAA3B,EAAA,sEACE4B,IAAM,8CADR,OACVC,EADU,OAEhBL,EAAWK,EAAIC,MAFC,2CAAH,qDAIfC,KACC,IAEH,IAAMC,EAAmB3B,EAAQ4B,QAAO,SAAAC,GAAC,OACvCA,EAAEhC,KAAKiC,cAAcC,SAASX,EAAOU,kBAKvC,OACE,sBAAKtC,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,+BACA,cAAC,EAAD,CACEoB,aAPe,SAAAoB,GAAC,OAAIX,EAAUW,EAAEC,OAAOC,QAQvCrB,YAAY,yBAEd,cAAC,EAAD,CACEb,QAAS2B,QCpBFQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.023972c7.chunk.js","sourcesContent":["import './card.css';\n\nconst Card = (props) => {\n    return (\n        <div className='card-container'>\n            <img alt='monster' src={`https://robohash.org/${props.a.id}?set=set2&size=180x180`}/>\n            <h2> {props.a.name} </h2>\n            <p>{props.a.email}</p>\n        </div>\n\n    )\n}\n\nexport default Card;","import './card-list.css';\nimport Card from '../card/card';\n\nconst CardList = (props) => {\n    return (\n        <div className=\"CardList\">\n            {props.monster.map(a => (\n                <Card key={a.id} a={a}/>\n            ))}\n        </div>\n    )\n}\nexport default CardList;","import * as React from \"react\"\n\nfunction Search(props) {\n  return (\n    <svg\n      viewBox=\"0 0 640 640\"\n      width={24}\n      height={24}\n      {...props}\n    >\n      <defs>\n        <path\n          d=\"M523.59 275.11c0 125.67-98.39 227.7-219.59 227.7S84.41 400.78 84.41 275.11c0-125.67 98.39-227.7 219.59-227.7s219.59 102.03 219.59 227.7z\"\n          id=\"prefix__a\"\n        />\n        <path d=\"M512.52 627l-97.03-159.32\" id=\"prefix__b\" />\n      </defs>\n      <use xlinkHref=\"#prefix__a\" fill=\"#03d2f8\" fillOpacity={0} />\n      <use\n        xlinkHref=\"#prefix__a\"\n        fillOpacity={0}\n        stroke=\"#43443f\"\n        strokeWidth={13}\n      />\n      <g>\n        <use\n          xlinkHref=\"#prefix__b\"\n          fillOpacity={0}\n          stroke=\"#43443f\"\n          strokeWidth={14}\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default Search","import './search-style.css';\nimport SearchIcon from '../icons/SearchIcon';\n\nconst Search = ({ handleChange, placeholder }) => {\n    return (\n        <div className='wrapper'>\n            <div className= 'iconWrapper'>\n                <SearchIcon className='icon' />\n                <input\n                    className='search'\n                    type='search'\n                    onChange={handleChange}\n                    placeholder={placeholder}\n                />\n            </div>\n        </div>\n\n\n    )\n}\nexport default Search","import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CardList from './components/card-list/card-list';\nimport Search from './components/search/search';\n\nfunction App(props) {\n  const [monster, setMonster] = useState([])\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await axios('https://jsonplaceholder.typicode.com/users');\n      setMonster(res.data)\n    };\n    fetchData();\n  }, []);\n\n  const filteredMonsters = monster.filter(b =>\n    b.name.toLowerCase().includes(search.toLowerCase()))\n\n  const handleChange = e => setSearch(e.target.value)\n  \n\n  return (\n    <div className=\"App\">\n      <h1 className='header'> Monsters Relodex</h1>\n      <Search\n        handleChange={handleChange}\n        placeholder='Type your monster...'\n      />\n      <CardList\n        monster={filteredMonsters}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();"],"sourceRoot":""}